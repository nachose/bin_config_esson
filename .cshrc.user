source /proj/dpi/cdpi_environment/envconfig.sh

setenv DEVDIR /repo/esecjos
#Add directory for neovim executable
setenv PATH /home/esecjos/.local/bin":"/home/esecjos/neovim/bin":"$PATH
#Add directory for amp executable
setenv PATH /home/esecjos/.cargo/bin":"$PATH
#Add delta directory
setenv PATH /home/esecjos/delta/target/release/":"$PATH

alias .. cd ..
alias ... cd ../..
alias .... cd ../../..
alias ..... cd ../../../..
alias ...... cd ../../../../..
alias vi vim -X
alias alco 'alfred -v compile'
alias alte 'alfred -v test'
alias alset 'alfred -v deps-set'
alias alall 'alset && alco && alte'
alias alct 'alco && alte'
alias ngrep 'grep --color=always -n'
alias less 'less -R -F -X -N' #-R for displaying terminal colors, -N for showing numbers, -F for exit if less than one screen
alias top 'top -u esecjos'
alias ps 'ps -u esecjos -ef'
alias pstree 'pstree esecjos'
alias htop 'htop -u esecjos'
alias killall 'killall -u esecjos'
alias du 'du -h'
alias df 'df -h'
alias cat_c cat ~/.cshrc.user
alias dirs 'dirs -lpv'
alias sourceTrail 'sh /proj/dpi/Sourcetrail/SourceTrail.sh'
alias begin_dpi 'cd $DEVDIR && cd cdpi-main && setup_dpi && ..'
alias begin_epg 'cd $DEVDIR && cd epg && setup_workspace'
alias begin_pcg 'cd $DEVDIR && cd epg && setup_workspace -d'
alias bob_bob 'env CCACHE_DIR=/workspace/git/${USER}/ccache ./bob/bob |& tee ../log_bob_bob.txt'
alias bob_clean 'env CCACHE_DIR=/workspace/git/${USER}/ccache ./bob/bob clean |& tee ../log_bob_clean.txt'
alias bob_push 'env CCACHE_DIR=/workspace/git/${USER}/ccache ./bob/bob push |& tee ../log_bob_push.txt'
alias bob_build 'env CCACHE_DIR=/workspace/git/${USER}/ccache ./bob/bob build |& tee ../log_bob_build.txt'
alias bob_debug 'env CCACHE_DIR=/workspace/git/${USER}/ccache ./bob/bob -p build-type=Debug generate build'
alias bob_init 'env CCACHE_DIR=/workspace/git/${USER}/ccache ./bob/bob init generate pull |& tee ../log_bob_init.txt'
alias bob_test 'env CCACHE_DIR=/workspace/git/${USER}/ccache ./bob/bob test |& tee ../log_bob_test.txt'
alias bob_data_plane_clean 'env CCACHE_DIR=/workspace/git/${USER}/ccache ./bob/bob data-plane.clean |& tee ../log_bob_data_plane_clean.txt'
alias bob_image 'env CCACHE_DIR=/workspace/git/${USER}/ccache ./bob/bob image |& tee ../log_bob_image.txt'
alias git_showfirst  'git show `git log -1 --oneline | cut -d " " -f 1`'
alias build_epg 'build -c Linux_x86_64 -r -t -D |& tee ../log_epg_build.txt'
alias build_epg_up ' build -c lin up/all |& tee ../log_epg_up_build.txt'
alias grep_zombies 'ps aux | grep esecjos | grep "Z"'
alias cppcheckt_last 'cppcheck --language=c++ -I/repo/esecjos/cdpi-main/NSDdependencies/cdpi-toolkit/NSNunit/lib/nsunit/ `git lastnames` > log_cppcheck.txt'
alias plantuml 'java -jar /app/vbuild/tools/plantuml/1.2019.11/bin/plantuml.jar'
alias pgrep 'pgrep -u esecjos'
alias cmake_dpi 'cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DINTEGRATION_MODE=OFF -DCMAKE_TOOLCHAIN_FILE=/repo/esecjos/BuildAndTools/cmake/linux_x86_64.cmake -DUSE_MEMCHECK_VALGRID=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DUSE_EPG_3PP=ON -GNinja .. '\
                '|& tee ../../cmake_dpi_log.txt'
alias cmake_dpi_debug 'cmake -DCMAKE_BUILD_TYPE=Debug -DINTEGRATION_MODE=OFF -DCMAKE_TOOLCHAIN_FILE=/repo/esecjos/BuildAndTools/cmake/linux_x86_64.cmake -DUSE_MEMCHECK_VALGRID=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DUSE_EPG_3PP=ON -GNinja .. '\
                '|& tee ../../cmake_dpi_debug_log.txt'
alias ninja_log 'ninja |& tee ../../ninja_dpi_log.txt'



#Set dev dir
setenv REPO_DIR /repo/esecjos/
setenv CORES_DIR /lab/epg_ft/teams/team_toberano
setenv RELEASES_DIR /lab/epg_scm19_builds/epg3/release/
setenv DPI_DIR ${REPO_DIR}/cdpi-main
setenv EPG_DIR ${REPO_DIR}/epg
setenv EDITOR vim
setenv VISUAL vim
setenv LAST_TR ${HOME}/last_tr
#setenv LC_ALL en_US.utf8
#setenv LC_CTYPE en_US.utf8

#implicit cd, to not need to use cd to access a directory
set implicitcd
#artifactory token
source ${HOME}/artifactory_token.sh

#Set path
setenv PATH $PATH\:${HOME}/bin
setenv cdpath ${HOME}
setenv CDPATH ${HOME}
setenv RELEASES_DIR /lab/epg_scm19_builds/epg3/release/EPG_28R73FY01/common/unstripped
setenv DIR_LOGS_EXECS /lab/epg_st_portal_logs
setenv handler_text_exec_dir ${DEVDIR}/cdpi-main/cmake_build/epg/NSDpfcphandler/test/handler
setenv WORK_DIR ${DEVDIR}/cdpi-main/NSDserviceFunctions/lib/reporting

source ~/.modules

module add slang/latest
setenv LD_LIBRARY_PATH $HOME/tree-sitter
